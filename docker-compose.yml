services:
  db:
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${PORT}:${PORT}"
    env_file:
      - .env
    environment:
      DATABASE_URL: "postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}?sslmode=disable"
      PORT: ${PORT}
      LOGGER_LEVEL: ${LOGGER_LEVEL}
      SHUTTING_DOWN_TIME: ${SHUTTING_DOWN_TIME}
      JWT_SECRET: ${JWT_SECRET}
      BOT_URL: http://telegram-bot:${BOT_PORT}
      RUN_MIGRATIONS: ${RUN_MIGRATIONS}
    restart: always

  telegram-bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    depends_on:
      - app
    ports:
      - "${BOT_PORT}:${BOT_PORT}"
    env_file:
      - .env
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      BOT_PORT: ${BOT_PORT}
      API_URL: http://app:${PORT}
      LOGGER_LEVEL: ${LOGGER_LEVEL}
    restart: always

volumes:
  pgdata: